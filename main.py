import os
import telebot
import requests
import pyodbc
import random

from telebot import types
from pytube import YouTube

token = '6442272018:AAEuXpP82RiwYIL8NDnfW1NGUG_odLXAR3k'
bot = telebot.TeleBot(token)

mySQLServer = "WIN-VLHPBSGD7PP\SQLEXPRESS01"
myDatabase = "Test_01"

class AddFilm:
    def __init__(self, name):
        self.name = name
        self.genre = None
        self.year = None
        self.country = None

AddFilm_dict = {}
def bigine(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_parrot = types.KeyboardButton('–ü–æ–ø—É–≥–∞–π')
    button_audio = types.KeyboardButton('–î–æ—Å—Ç–∞—ë–º –∑–≤—É–∫')
    button_video = types.KeyboardButton('–î–æ—Å—Ç–∞—ë–º –≤–∏–¥–µ–æ')
    button_weather = types.KeyboardButton('–ü–æ–≥–æ–¥–∞')
    button_film = types.KeyboardButton('–§–∏–ª—å–º')
    markup.add(button_parrot, button_audio, button_video, button_weather, button_film)
    bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –∫–Ω–æ–ø–æ—á–∫–∏.', reply_markup=markup)

def back_button(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(button_back)
    bot.send_message(message.chat.id, '–õ–∏–±–æ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –Ω–∞–∑–∞–¥', reply_markup=markup)

def film_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_random = types.KeyboardButton('–°–∫–∞–∂–∏ —Å–ª—É—á–∞–π–Ω—ã–π')
    button_year = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø–æ –≥–æ–¥—É')
    button_genre = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø–æ –∂–∞–Ω—Ä—É')
    button_add = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º')
    button_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(button_random,button_year,button_genre,button_add,button_back)
    bot.send_message(message.chat.id, '–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å —Ñ–∏–ª—å–º–∞–º–∏?', reply_markup=markup)

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id,'–ü—Ä–∏–≤–µ—Ç ü¶ä\n–ë–æ—Ç –º–æ–∂–µ—Ç\n-–ü–æ–≤—Ç–æ—Ä—è—Ç—å –∑–∞ —Ç–æ–±–æ–π\n-C–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–ª–∏ –∑–≤—É–∫ –≤–∏–¥–µ–æ —Å Youtube\n-–ü–æ–¥—Å–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ\n-–ü–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º —Ñ–∏–ª—å–º–∞.')
    bigine(message)
    #keyboard = types.InlineKeyboardMarkup()
    #url_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å', url='http://ya.ru')
    #keyboard.add(url_button)

def parrot (message):
    if message.text.lower() == '—Ö–≤–∞—Ç–∏—Ç':
        bot.send_message(message.chat.id, 'ü¶ú \n –ù—É —Ä–∞–∑ —Ö–≤–∞—Ç–∏—Ç , —Ç–æ —Ö–≤–∞—Ç–∏—Ç.')
        bigine(message)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_stop_parrot = types.KeyboardButton('–•–≤–∞—Ç–∏—Ç')
        markup.add(button_stop_parrot)
        bot.send_message(message.chat.id, message.text,reply_markup=markup)
        bot.register_next_step_handler(message, parrot)

def Download_video(message):
    chat_id = message.chat.id
    video_url = message.text
    if video_url.startswith('https://youtu.be/') or video_url.startswith('https://www.youtube.com'):
        youtube_video = YouTube(video_url)
        video_title = youtube_video.title
        try:
            video = youtube_video.streams.get_highest_resolution()
            video.download()
            bot.send_video(chat_id, open(f'{video.title}.mp4', 'rb'))
        except Exception as e:
            bot.send_message(chat_id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')
        os.remove(f'{video_title}.mp4')
    elif video_url.lower() == '–Ω–∞–∑–∞–¥':
        bigine(message)
    else:
        bot.send_message(chat_id,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É —Å—Å—ã–ª–∫—É.–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, Download_video)

def Download_audio(message):
    chat_id = message.chat.id
    video_url = message.text
    if video_url.startswith('https://youtu.be/') or video_url.startswith('https://www.youtube.com'):
        try:
            youtube_video = YouTube(video_url)
            video_title = youtube_video.title
            audio = youtube_video.streams.filter(only_audio=True).first()
            audio.download(filename=f'{video_title}_audio')
            with open(f'{video_title}_audio', 'rb') as audio_file:
                bot.send_audio(chat_id, audio_file)
        except Exception as e:
            bot.send_message(chat_id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')
        os.remove(f'{video_title}_audio')
    elif video_url.lower() == '–Ω–∞–∑–∞–¥':
        bigine(message)
    else:
        bot.send_message(chat_id,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É —Å—Å—ã–ª–∫—É.–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, Download_video)

def Check_the_weather(message):
    chat_id = message.chat.id
    city = message.text
    if city.lower() == '–Ω–∞–∑–∞–¥':
        bigine(message)
    else:
        url = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&lang=ru&appid=79d1ca96933b0328e1c7e3e7a26cb347'
        try:
            weather_data = requests.get(url).json()
            temperature = round(weather_data['main']['temp'])
            temperature_feels = round(weather_data['main']['feels_like'])
            bot.send_message(chat_id,f'–°–µ–π—á–∞—Å –≤ –≥–æ—Ä–æ–¥–µ {city}: {str(temperature)}¬∞C\n –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {temperature_feels}¬∞C')
            bot.register_next_step_handler(message, Check_the_weather)
        except Exception as e:
            #bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–æ–∑–∂–µ.')
            bot.register_next_step_handler(message, Check_the_weather)

def random_film(message):
    chat_id = message.chat.id
    try:
        connection = pyodbc.connect('Driver={SQL Server};'
                                'Server=' + mySQLServer + ';'
                                'Database=' + myDatabase + ';'
                                )
        dbCursor = connection.cursor()
        requestString1 = 'Select Min(FilmID) from FilmsList'
        requestString2 = 'Select Max(FilmID) from FilmsList'
        dbCursor.execute(requestString1)
        i = dbCursor.fetchone()
        i = i[0]
        dbCursor.execute(requestString2)
        j = dbCursor.fetchone()
        j = j[0]
        rn = random.randint(i, j)
        requestString3 = f'Select FilmName,FilmGenre,FilmYear,Film–°ountry from FilmsList with(nolock) where FilmID={rn}'
        dbCursor.execute(requestString3)
        row = dbCursor.fetchall()
        connection.close()
        bot.send_message(chat_id,f'–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º: {row[0][0]}\n–∂–∞–Ω—Ä: {row[0][1]}\n–°—Ç—Ä–∞–Ω–∞, –≥–æ–¥: {row[0][3]},{row[0][2]}')
    except Exception as e:
        #bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        bot.send_message(chat_id, f'–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')


def random_year(message):
    chat_id = message.chat.id
    n_year = message.text
    if  n_year.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else:
        try:
            connection = pyodbc.connect('Driver={SQL Server};'
                                    'Server=' + mySQLServer + ';'
                                    'Database=' + myDatabase + ';'
                                    )
            dbCursor = connection.cursor()
            requestString1 = f'Select * from FilmsList with(nolock) where FilmYear={n_year}'
            dbCursor.execute(requestString1)

            if dbCursor.fetchone() is None :
                bot.send_message(chat_id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Ñ–∏–ª—å–º–∞ —Ç–∞–∫–æ–≥–æ –≥–æ–¥–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(message, random_year)
            else:
                requestString2 = f'Select FilmName,FilmGenre,FilmYear,Film–°ountry from FilmsList with(nolock) where FilmYear={n_year}'
                dbCursor.execute(requestString2)
                row = dbCursor.fetchall()
                i = 0
                t = len(row)
                while i <= t - 1:
                    bot.send_message(chat_id,f'–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º: {row[i][0]}\n–∂–∞–Ω—Ä: {row[i][1]}\n–°—Ç—Ä–∞–Ω–∞, –≥–æ–¥: {row[i][3]},{row[i][2]}')
                    i += 1
                connection.close()
        except Exception as e:
            #bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')

def random_genre(message):
    chat_id = message.chat.id
    n_genre = message.text

    if n_genre.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else :
        try:
            connection = pyodbc.connect('Driver={SQL Server};'
                                'Server=' + mySQLServer + ';'
                                'Database=' + myDatabase + ';'
                                )
            dbCursor = connection.cursor()
            requestString1 = f'Select * from FilmsList with(nolock) where FilmGenre=\'{n_genre}\''
            dbCursor.execute(requestString1)

            if dbCursor.fetchone() is None :
                bot.send_message(chat_id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Ñ–∏–ª—å–º–∞ —Ç–∞–∫–æ–≥–æ –∂–∞–Ω—Ä–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(message, random_genre)
            else:
                requestString2 = f'Select FilmName,FilmGenre,FilmYear,Film–°ountry from FilmsList with(nolock) where FilmGenre=\'{n_genre}\''
                dbCursor.execute(requestString2)
                row = dbCursor.fetchall()
                i = 0
                t = len(row)
                while i <= t - 1:
                    bot.send_message(chat_id,f'–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º: {row[i][0]}\n–∂–∞–Ω—Ä: {row[i][1]}\n–°—Ç—Ä–∞–Ω–∞, –≥–æ–¥: {row[i][3]},{row[i][2]}')
                    i += 1
            connection.close()
        except Exception as e:
            #bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')


def add_film_name(message):
    chat_id = message.chat.id
    f_Name = message.text
    if f_Name.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else :
        try :
            chat_id = message.chat.id
            f_Name = message.text
            f_Name = AddFilm(f_Name)
            AddFilm_dict[chat_id] = f_Name
            bot.send_message(chat_id, '–ñ–∞–Ω—Ä')
            bot.register_next_step_handler(message, add_film_genre)
        except Exception as e:
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
            bigine(message)
def add_film_genre(message):
    chat_id = message.chat.id
    f_genre = message.text
    if f_genre.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else :
        try :

            genre = AddFilm_dict[chat_id]
            genre.genre = f_genre
            bot.send_message(chat_id, '–≥–æ–¥')
            bot.register_next_step_handler(message, add_film_year)
        except Exception as e:
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
            bigine(message)
def add_film_year(message):
    chat_id = message.chat.id
    f_year = message.text
    if f_year.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else :
        try:
            if not f_year.isdigit():
                msg = bot.reply_to(message, '–ß—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫ —Å —Ç–≤–æ–∏ –≥–æ–¥–æ–º, –∑–∞–¥–∞–π –≥–æ–¥ –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(msg, add_film_year)
                return
            year = AddFilm_dict[chat_id]
            year.year = f_year
            #test(message)
            bot.send_message(chat_id, '–°—Ç—Ä–∞–Ω–∞')
            bot.register_next_step_handler(message, add_film_counry)
        except Exception as e:
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
            bigine(message)
def add_film_counry(message):
    chat_id = message.chat.id
    f_counry = message.text
    if f_counry.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else :
        try:
            counry = AddFilm_dict[chat_id]
            counry.counry = f_counry
            add_film_agreement(message)
        except Exception as e:
            bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
            bigine(message)
def add_film_agreement(message):
    chat_id = message.chat.id
    text = message.text
    if text.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)
    else :
        film = AddFilm_dict[chat_id]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_film_add_yes = types.KeyboardButton('–î–∞')
        button_film_add_no = types.KeyboardButton('–ù–µ—Ç')
        button_film_menu = types.KeyboardButton('–ú–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º')
        markup.add(button_film_add_yes, button_film_add_no, button_film_menu)
        bot.send_message(chat_id, f'–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å\n—Ñ–∏–ª—å–º –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º: {film.name}\n–∂–∞–Ω—Ä: {film.genre}\n–≥–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:{film.year}\n—Å—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:{film.counry}\n?',reply_markup=markup)

def add_film_yes(message):
    chat_id = message.chat.id
    film = AddFilm_dict[chat_id]
    try:
        connection = pyodbc.connect('Driver={SQL Server};'
                                    'Server=' + mySQLServer + ';'
                                    'Database=' + myDatabase + ';'
                                    )
        dbCursor = connection.cursor()
        requestStringAddFilm = f'insert into FilmsList (FilmName,FilmGenre,FilmYear,Film–°ountry) values (\'{film.name}\',\'{film.genre}\',{film.year},\'{film.counry}\')'
        dbCursor.execute(requestStringAddFilm)
        dbCursor.commit()
        connection.close()
        bot.send_message(chat_id, '–û—Ç–ª–∏—á–Ω–æ —Ñ–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω')
    except Exception as e:
        # bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        bot.send_message(chat_id, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
    bigine(message)

def add_film_no(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_film_menu = types.KeyboardButton('–ú–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º')
    markup.add(button_film_menu)
    chat_id = message.chat.id
    bot.send_message(chat_id, '–°—É–¥—è –ø–æ –≤—Å–µ–º—É, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞?',reply_markup=markup)
    bot.register_next_step_handler(message, add_film_name)

@bot.message_handler(content_types=['text'])
def message_reply(message):
    if message.text.lower() == '–ø–æ–ø—É–≥–∞–π':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_stop_parrot = types.KeyboardButton('–•–≤–∞—Ç–∏—Ç')
        markup.add(button_stop_parrot)
        bot.send_message(message.chat.id, '–í—Å—ë —á—Ç–æ —Å–∫–∞–∂–µ—à—å –ø–æ–≤—Ç–æ—Ä—é.\n–ï—Å–ª–∏ –Ω–∞–¥–æ–µ—Å—Ç —Å–∫–∞–∂–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–•–≤–∞—Ç–∏—Ç".ü¶ú',reply_markup=markup)
        bot.register_next_step_handler(message, parrot)

    if message.text.lower() == '–¥–æ—Å—Ç–∞—ë–º –∑–≤—É–∫':
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –∑–≤—É–∫.')
        back_button(message)
        bot.register_next_step_handler(message, Download_audio)

    if message.text.lower() == '–¥–æ—Å—Ç–∞—ë–º –≤–∏–¥–µ–æ':
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å —Å–∫–∞—á–∞—Ç—å.')
        back_button(message)
        bot.register_next_step_handler(message, Download_video)

    if message.text.lower() == '–ø–æ–≥–æ–¥–∞':
        bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –ø–æ–≥–æ–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç')
        back_button(message)
        bot.register_next_step_handler(message, Check_the_weather)

    if message.text.lower() == '—Ñ–∏–ª—å–º':
        film_menu(message)

    if message.text.lower() == '—Å–∫–∞–∂–∏ —Å–ª—É—á–∞–π–Ω—ã–π':
        bot.send_message(message.chat.id, '–ù–µ –∑–Ω–∞–µ—à—å —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ –Ω–∞ —Å—á—ë—Ç...')
        random_film(message)

    if message.text.lower() == '–Ω–∞–π—Ç–∏ –ø–æ –≥–æ–¥—É':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_film_menu= types.KeyboardButton('–ú–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º')
        markup.add(button_film_menu)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –≥–æ–¥ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',reply_markup=markup)
        bot.register_next_step_handler(message,random_year)

    if message.text.lower() == '–Ω–∞–π—Ç–∏ –ø–æ –∂–∞–Ω—Ä—É':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_film_menu= types.KeyboardButton('–ú–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º')
        markup.add(button_film_menu)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –∂–∞–Ω—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',reply_markup=markup)
        bot.register_next_step_handler(message,random_genre)

    if message.text.lower() == '–¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_film_menu= types.KeyboardButton('–ú–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º')
        markup.add(button_film_menu)
        bot.send_message(message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞?',reply_markup=markup)
        bot.register_next_step_handler(message,add_film_name)

    if message.text.lower() == '–Ω–∞–∑–∞–¥':
        bigine(message)

    if message.text.lower() == '–¥–∞':
        add_film_yes(message)
    if message.text.lower() == '–Ω–µ—Ç':
        add_film_no(message)
    if message.text.lower() == '–º–µ–Ω—é –ø–æ —Ñ–∏–ª—å–º–∞–º':
        film_menu(message)

if __name__ =='__main__':
    bot.infinity_polling()